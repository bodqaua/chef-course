<Page x:Class="Chef.ViewModels.WarehouseEdit.WarehouseEditViewModel"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Chef.ViewModels.WarehouseEdit"
      xmlns:validator="clr-namespace:Chef.Validators"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="WarehouseEditViewModel">
    <Grid Background="#FFFFFF">
        <Grid.RowDefinitions>
            <RowDefinition Height="84*"></RowDefinition>
            <RowDefinition Height="301*"></RowDefinition>
            <RowDefinition Height="65*"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" VerticalAlignment="Top" Height="58">
            <StackPanel VerticalAlignment="Top">
                <Label Margin="12,0,0,0" VerticalAlignment="Bottom" Content="Название"/>
                <TextBox 
                     Name="Name"
                     Width="120"
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Bottom" 
                     Margin="12,0,0,0" 
                     Padding="6,7,6,7" 
                     BorderBrush="#FFCED4DA">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                        <validator:BindingProxy Data="{Binding}" x:Key="proxy"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Name.Value" UpdateSourceTrigger="PropertyChanged"  ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <validator:TextBoxValidator>
                                    <validator:TextBoxValidator.Wrapper>
                                        <validator:Wrapper Validators="{Binding Path=Data.Name.Validators, Source={StaticResource proxy}}"/>
                                    </validator:TextBoxValidator.Wrapper>
                                </validator:TextBoxValidator>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Text="{Binding ErrorContent}" Foreground="Red"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Top">
                <Label Margin="12,0,0,0" VerticalAlignment="Bottom" Content="Цена"/>
                <TextBox
                     Name="Price"
                     Width="120"
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     Margin="12,0,0,0" 
                     Padding="6,7,6,7" 
                     BorderBrush="#FFCED4DA">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                        <validator:BindingProxy Data="{Binding}" x:Key="proxy"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Price.Value" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validator:TextBoxValidator Type="double">
                                    <validator:TextBoxValidator.Wrapper>
                                        <validator:Wrapper Validators="{Binding Path=Data.Price.Validators, Source={StaticResource proxy}}"/>
                                    </validator:TextBoxValidator.Wrapper>
                                </validator:TextBoxValidator>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Text="{Binding ErrorContent}" Foreground="Red"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Top">
                <Label Margin="12,0,0,0"
                       VerticalAlignment="Bottom"
                       Content="Количество"/>
                <TextBox 
                     Name="Quantity"
                     Width="120"
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     Margin="12,0,0,0" 
                     Padding="6,7,6,7" 
                     BorderBrush="#FFCED4DA">
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                        <validator:BindingProxy Data="{Binding}" x:Key="proxy"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Quantity.Value" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validator:TextBoxValidator Type="int">
                                    <validator:TextBoxValidator.Wrapper>
                                        <validator:Wrapper Validators="{Binding Path=Data.Quantity.Validators, Source={StaticResource proxy}}"/>
                                    </validator:TextBoxValidator.Wrapper>
                                </validator:TextBoxValidator>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder />
                                <TextBlock Text="{Binding ErrorContent}" Foreground="Red"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom">
                <Button x:Name="addHandler"
                    Cursor="Hand"
                    Width="120"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" 
                    Margin="12,0,0,0" >
                    <Button.Template>
                        <ControlTemplate>
                            <Border CornerRadius="4"
                            Background="#00897b"
                            Padding="12,8,12,8" BorderBrush="#FF00897B">
                                <TextBlock Text="Добавить"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Name}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Price}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Quantity}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </DockPanel>
        <DockPanel  Grid.Row="1">
            <DataGrid
                  IsReadOnly="False"
                  Name="WarehouseDataGrid" 
                  AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Width="132" Binding="{Binding Name}" Header="Name"/>
                    <DataGridTextColumn IsReadOnly="True" Width="132" Binding="{Binding Price}" Header="Price"/>
                    <DataGridTextColumn IsReadOnly="True" Width="132" Binding="{Binding Quantity}" Header="Quantity"/>
                </DataGrid.Columns>
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseLeftButtonUp" Handler="EditProduct_Click"/>
                    </Style>
                </DataGrid.ItemContainerStyle>
            </DataGrid>
        </DockPanel>
        <DockPanel Grid.Row="2">
            <Button x:Name="saveHandler"
                    Cursor="Hand"
                    Width="120"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center" 
                    Margin="12">
                <Button.Template>
                    <ControlTemplate>
                        <Border CornerRadius="4"
                            Background="#00897b"
                            Padding="12,8,12,8" BorderBrush="#FF00897B">
                            <TextBlock Text="Сохранить"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Name}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Price}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Quantity}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DockPanel>
    </Grid>

</Page>
